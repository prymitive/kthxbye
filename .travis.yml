os: linux
language: go
go: "1.13.4"
go_import_path: github.com/prymitive/kthxbye
env:
  - GO111MODULE=on

jobs:
  include:
    - stage: Test
      name: Build the binary
      script:
        - go build ./...

    - stage: Test
      name: Lint code
      script:
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint
        - golangci-lint run

    - stage: Test
      name: Verify go.sum
      script:
        - travis_retry go get -d -v ./...
        - travis_retry go mod tidy
        - git diff --exit-code

    - stage: Test
      name: Build docker image
      if: (type = push AND branch = master) OR tag IS NOT present
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      script: travis_retry docker build .

    - stage: Build and Deploy
      name: Build and push docker image
      if: repo = prymitive/kthxbye AND ((type = push AND branch = master) OR tag IS present)
      language: shell
      addons:
        apt:
          packages:
            - docker-ce
      env:
        # DOCKER_PASSWORD
        - secure: "ZQn5dOcXevT+wZSEEbG+i+nIKsc1pPu8USHjo/hD8gO2+8mTULokqaBZxTN7R/CnkMfa64/58Y8EdajCNbU+oaOHyPGN96ocVLkMkr2/tOY27b0gdkE7+/f+LujnhFcTWshG4jKmtF+332N4JPnCLgyqUpcbknwFmI+MS06+gs7bKQyWP76HzQ9kUvM22q2vU8W3AkvRcmY3bbFB3i7/8Gdtd6QV7lKMek6Pqo1fT8M/ieBBSNkdb2XwHXN3og11McelB/7ib4Kbt6eLibDcZwUpJ8u9Z6hTbOPGBlp6TAtUis8ippiVjGLrrGMN83UiZSBAgieGvQ24wG5dRQGKch/S+y21rM61a9WDL0iCGFqvsw6GW5ZStmppx+RyD3TQ8s/zVtDcC3nvZyHD+dfVzLxYiANGXAYMNltJPC6T57E4w7cCgZ0pL0xiJWRXeq3P9pkBCd+7qNey496ifdg2SANQytx6rA8uj2N8NeAWqBirM/bFewqpCbAvIiLnB2NSKrIP4STNLYaeoH7Y1VIIrCcCrLPd6tap8H6i2H6JN1KT8kJ464c3nVen52NbhYliOOw/B/2S9TFeNaNwgdflnlsXWIAUMGXbK0NFUTUGCOypb4z3Dv9E7E71IPkYtlAC7HWl0UV5oQlkQjjzch0gJp8RnuMW8inLer47LXxm5Yg="
      script:
        - export VERSION=$(git describe --tags --always --dirty='-dev')
        - export DOCKER_USERNAME=lmierzwa
        - export DOCKER_IMAGE=kthxbye
        - export IMAGE_NAME="${DOCKER_USERNAME}/${DOCKER_IMAGE}"
        - travis_retry docker build -t "${LOCAL_IMAGE}" .
        - export LOCAL_IMAGE="${DOCKER_IMAGE}:${VERSION}"
        ### Docker Hub
        - travis_retry docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
        - docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:latest"
        # tag with the version only if we have a git tag (new release was pushed)
        - if [ -n "$TRAVIS_TAG" ]; then docker tag "${LOCAL_IMAGE}" "${IMAGE_NAME}:${VERSION}" ; fi
        - travis_retry docker push "${IMAGE_NAME}"
